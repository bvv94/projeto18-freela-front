{"ast":null,"code":"var _jsxFileName = \"/home/brenda/T11REC/projeto18-freela-front/src/Components/LogIn.js\",\n  _s = $RefreshSig$();\nimport styled from \"styled-components\";\nimport InputStyled from \"../Style/StyledInput\";\nimport ButtonStyled from \"../Style/StyledButton\";\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { UserContext } from '../Context/UserContext.js';\nimport axios from \"axios\";\nimport { useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LogIn() {\n  _s();\n  const [cpf, setCpf] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    cpftoken,\n    setToken\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  function login(e) {\n    const body = {\n      cpf,\n      password\n    };\n    e.preventDefault();\n    const promise = axios.post(\"https://mock-api.driven.com.br/api/v4/driven-plus/auth/login\", body);\n    promise.then(res => {\n      setToken(res.data.token);\n      setCpf(res.data.cpf);\n    });\n    promise.catch(err => {\n      alert(err.response.data.message);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: login,\n      children: [/*#__PURE__*/_jsxDEV(InputStyled, {\n        name: \"cpf\",\n        type: \"cpf\",\n        placeholder: \"CPF\",\n        required: true,\n        value: cpf,\n        onChange: e => setCpf(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputStyled, {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Senha\",\n        required: true,\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonStyled, {\n        type: \"submit\",\n        children: \"ENTRAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tosignin, {\n        to: \"/cadastro\",\n        children: \"N\\xE3o possui uma conta? Cadastre-se\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(LogIn, \"uo9DwY2V7vrjFWyzY2f2lDjBGTg=\", false, function () {\n  return [useNavigate];\n});\n_c = LogIn;\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    display: flex;\n    align-items: center;\n`;\n_c2 = Form;\nconst Tosignin = styled(Link)`\n    font-family: \"roboto\";\n    font-size: 14px;\n    font-weight: 400;\n    color: white;\n`;\n_c3 = Tosignin;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LogIn\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"Tosignin\");","map":{"version":3,"names":["styled","InputStyled","ButtonStyled","useState","Link","useNavigate","UserContext","axios","useContext","jsxDEV","_jsxDEV","Fragment","_Fragment","LogIn","_s","cpf","setCpf","password","setPassword","cpftoken","setToken","navigate","login","e","body","preventDefault","promise","post","then","res","data","token","catch","err","alert","response","message","children","Form","onSubmit","name","type","placeholder","required","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","Tosignin","to","_c","form","_c2","_c3","$RefreshReg$"],"sources":["/home/brenda/T11REC/projeto18-freela-front/src/Components/LogIn.js"],"sourcesContent":["import styled from \"styled-components\"\nimport InputStyled from \"../Style/StyledInput\"\nimport ButtonStyled from \"../Style/StyledButton\"\nimport { useState } from \"react\"\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { UserContext } from '../Context/UserContext.js';\nimport axios from \"axios\";\nimport { useContext } from \"react\"\n\nexport default function LogIn() {\n    const [cpf, setCpf] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const { cpftoken, setToken } = useContext(UserContext)\n    const navigate = useNavigate();\n\n    function login(e) {\n\n        const body = { cpf, password }\n        e.preventDefault();\n        const promise = axios.post(\"https://mock-api.driven.com.br/api/v4/driven-plus/auth/login\", body)\n\n\n        promise.then((res) => {\n            setToken(res.data.token)\n            setCpf(res.data.cpf)\n        })\n        promise.catch((err) => {\n            alert(err.response.data.message)\n        })\n    }\n\n    return (\n        <>\n            <Form onSubmit={login}>\n                <InputStyled name=\"cpf\" type=\"cpf\" placeholder=\"CPF\" required\n                    value={cpf} onChange={e => setCpf(e.target.value)} />\n                <InputStyled name=\"password\" type=\"password\" placeholder=\"Senha\" required\n                    value={password} onChange={e => setPassword(e.target.value)} />\n                <ButtonStyled type=\"submit\">ENTRAR</ButtonStyled>\n                <Tosignin to=\"/cadastro\">NÃ£o possui uma conta? Cadastre-se</Tosignin>\n            </Form>\n        </>)\n}\n\nconst Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    display: flex;\n    align-items: center;\n`\nconst Tosignin = styled(Link)`\n    font-family: \"roboto\";\n    font-size: 14px;\n    font-weight: 400;\n    color: white;\n`"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}